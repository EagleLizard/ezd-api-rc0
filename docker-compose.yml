
services:
  web:
    container_name: web
    build: .
    command: npm start
    stop_grace_period: 1s
    ports:
      - ${EZD_API_PORT}:${EZD_API_PORT}
    depends_on:
      - postgres
    environment:
      - PORT=${EZD_API_PORT}
      - ENVIRONMENT=${ENVIRONMENT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_DOCKER_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - SESSION_SECRET=${SESSION_SECRET}
      - EZD_JWT_SECRET=${EZD_JWT_SECRET}
      - EZD_WEB_ORIGIN=${EZD_WEB_ORIGIN}
      - EZD_ADMIN_EMAIL=${EZD_ADMIN_EMAIL}
      - REST_FRAMEWORK=${REST_FRAMEWORK}
  postgres:
    container_name: postgres_db
    restart: unless-stopped
    # platform: linux/amd64
    # image: postgres:latest
    build:
      dockerfile: ./Dockerfile.pg
    ports: 
      - ${POSTGRES_PORT}:${POSTGRES_DOCKER_PORT}
    volumes:
      - ./ezd_api_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

